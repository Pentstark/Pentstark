name: Build & Deploy to Hostinger

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    steps:
    # 1Ô∏è‚É£ Checkout repository
    - name: Checkout repository
      uses: actions/checkout@v4

    # 2Ô∏è‚É£ Setup Node on runner (optional, for build)
    - name: Setup Node.js (for build)
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    # 3Ô∏è‚É£ Clean npm cache
    - name: Clean npm cache
      run: npm cache clean --force

    # 4Ô∏è‚É£ Install dependencies for build
    - name: Install dependencies
      run: npm ci

    # 5Ô∏è‚É£ Build project
    - name: Build project
      run: npm run build

    # 6Ô∏è‚É£ Verify dist folder exists
    - name: Check dist folder
      run: |
        if [ ! -d "dist" ]; then
          echo "‚ùå Build failed: dist folder not found!"
          exit 1
        fi

    # 7Ô∏è‚É£ Setup SSH agent
    - name: Setup SSH
      uses: webfactory/ssh-agent@v0.9.0
      with:
        ssh-private-key: ${{ secrets.HOSTINGER_SSH_KEY }}

    # 8Ô∏è‚É£ Deploy dist folder incrementally to remote
    - name: Deploy dist folder incrementally
      env:
        DEPLOY_PATH: /home/u452452192/domains/safeproduction.pentstark.com/public_html
      run: |
        echo "üöÄ Deploying dist folder incrementally..."
        rsync -avz --checksum --progress \
          -e "ssh -p 65002 -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null" \
          dist/ u452452192@147.93.109.200:$DEPLOY_PATH/

    # 9Ô∏è‚É£ Zip repo files, deploy, install Node & npm dependencies on Hostinger
    - name: Zip, deploy, and setup Node on Hostinger
      env:
        DEPLOY_PATH: /home/u452452192/domains/safeproduction.pentstark.com/public_html/main
      run: |
        echo "üì¶ Creating repo zip (excluding dist)..."
        zip -r repo.zip . -x "dist/*" ".git/*" "node_modules/*"

        echo "üöÄ Ensuring remote folder exists..."
        ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -p 65002 \
          u452452192@147.93.109.200 "mkdir -p $DEPLOY_PATH"

        echo "üöÄ Uploading and extracting zip, installing Node and npm dependencies..."
        ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -p 65002 \
          u452452192@147.93.109.200 "
            cd $DEPLOY_PATH
            unzip -o repo.zip
            rm repo.zip

            # Install Node.js if not already present
            if [ ! -d \"\$HOME/node\" ]; then
              echo '‚¨áÔ∏è Downloading Node.js...'
              wget https://nodejs.org/dist/v18.20.1/node-v18.20.1-linux-x64.tar.gz -O node.tar.gz
              tar -xzf node.tar.gz
              mv node-v18.20.1-linux-x64 node
              rm node.tar.gz
            fi

            # Add Node to PATH for this session
            export PATH=\$HOME/node/bin:\$PATH

            # Verify Node & npm
            node -v
            npm -v

            # Install dependencies in deployed folder
            npm install

            echo '‚úÖ Node installed and dependencies installed successfully.'
          "

    # üîü Cleanup local build folder and zip to save runner space
    - name: Cleanup local files
      run: rm -rf dist repo.zip

    # 1Ô∏è‚É£1Ô∏è‚É£ Final deployment message
    - name: Deployment complete
      run: echo "‚úÖ Deployment finished successfully!"
